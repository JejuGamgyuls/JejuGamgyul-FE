name: Create Jira issue
on:
  issues:
    types:
      - opened

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout develop code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Extract prefix from issue title
        id: extract-prefix
        run: |
          # 이슈 제목에서 접두어 추출
          TITLE="${{ github.event.issue.title }}"
          PREFIX=$(echo "$TITLE" | grep -o -E '^(Feat|Bug|Fix|Chore|Doc|Hotfix|Refactor|Remove|Rename|Style):' | sed 's/://')
          echo "PREFIX=$PREFIX" >> $GITHUB_ENV

      - name: Set Template Path
        id: set-template-path
        run: |
          if [[ "${{ env.PREFIX }}" == "Bug" ]]; then
            echo "TEMPLATE_PATH=.github/ISSUE_TEMPLATE/bug-form.yml" >> $GITHUB_ENV
          else
            echo "TEMPLATE_PATH=.github/ISSUE_TEMPLATE/issue-form.yml" >> $GITHUB_ENV
          fi

      - name: Issue Parser
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: ${{ env.TEMPLATE_PATH }}

      - name: Log Issue Parser
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}'

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Get Active Sprint ID
        id: get-sprint-id
        run: |
          SPRINT_ID=$(curl -s -u ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
          -X GET "https://hyorish2001.atlassian.net/rest/agile/1.0/board/1/sprint?state=active" \
          | jq '.values[0].id')
          echo "SPRINT_ID=$SPRINT_ID" >> $GITHUB_ENV

      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: ${{ secrets.JIRA_PROJECT_NAME }}
          issuetype: Task
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "customfield_10020": ${{ env.SPRINT_ID }}
            }

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.create.outputs.issue }} was created"

      - name: Checkout develop code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Create branch with Ticket number
        run: |
          git checkout -b "${{ steps.create.outputs.issue }}/${{ env.PREFIX }}"
          git push origin "${{ steps.create.outputs.issue }}/${{ env.PREFIX }}"

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.create.outputs.issue }} ${{ github.event.issue.title }}"
